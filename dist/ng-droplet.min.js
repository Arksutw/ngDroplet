!function(e){"use strict";e.module("ngDroplet",[]).directive("droplet",["$rootScope","$window","$timeout",function(t,n,r){return{restrict:"EA",template:'<droplet-preview ng-repeat="file in filterFiles(FILE_TYPES.VALID)" ng-model="file"></droplet-preview>',require:"?ngModel",scope:{directiveInterface:"=ngModel"},controller:["$scope",function(i){i.FILE_TYPES={VALID:1,INVALID:2,DELETED:4,UPLOADED:8},i.files=[],i.options={disableXFileSize:!1,useArray:!0},i.extensions=[],i.requestUrl="",i.requestProgress={percent:0,total:0,loaded:0},i.requestHeaders={},i.listeners={success:function(e){e.upload.onload=function(){i.$apply(function(){i.forEachFile(i.FILE_TYPES.VALID,function(e){e.type=i.FILE_TYPES.UPLOADED})})}},progress:function(e,t){e.upload.onprogress=function(e){e.lengthComputable&&(i.requestProgress.percent=Math.round(e.loaded/t*100),i.requestProgress.loaded=e.loaded,i.requestProgress.total=t)}}},i.forEachFile=function(t,n){e.forEach(i.filterFiles(t||i.FILE_TYPES.VALID),function(e){n(e)})},i.addFile=function(e,t){t=t||i.FILE_TYPES.VALID;var r={file:e,type:t,date:new n.Date,mimeType:e.type,extension:i.getExtension(e)};return i.files.push(r),r},i.filterFiles=function(e){return i.files.filter(function(t){return e&t.type})},i.getExtension=function(e){return e.name.split(".").pop().trim().toLowerCase()},i.traverseFiles=function(e){i.$apply(function(){for(var t=0,n=e.length;n>t;t++){var r=e[t],o=i.getExtension(r),s=i.FILE_TYPES.VALID;-1===i.extensions.indexOf(o)&&(s=i.FILE_TYPES.INVALID),i.addFile(r,s)}})},i.uploadFiles=function(){var t=new n.XMLHttpRequest,r=new n.FormData,o=i.filterFiles(i.FILE_TYPES.VALID),s=i.options.useArray?"file[]":"file",l=i.getRequestLength(o);!function(){t.open("post",i.requestUrl,!0),i.options.disableXFileSize||t.setRequestHeader("X-File-Size",l),i.addRequestHeaders(t)}(),function(){i.listeners.success(t),i.listeners.progress(t,l)}(),e.forEach(o,function(e){r.append(s,e.file)}),t.send(r)},i.addRequestHeaders=function(e){for(var t in i.requestHeaders)i.requestHeaders.hasOwnProperty(t)&&e.setRequestHeader(t,i.requestHeaders[t]);return Object.keys(i.requestHeaders)},i.getRequestLength=function(t){var n=0;return e.forEach(t||i.filterFiles(i.FILE_TYPES.VALID),function(e){n+=e.file.size}),n},i.throwException=function(e){throw"ngDroplet: "+e+"."},function(){i.directiveInterface={FILE_TYPES:i.FILE_TYPES,uploadFiles:i.uploadFiles,progress:i.requestProgress,addFile:i.addFile,disableXFileSize:function(){i.options.disableXFileSize=!0},useArray:function(e){i.options.useArray=!!e},setRequestUrl:function(e){i.requestUrl=e},setRequestHeaders:function(e){i.requestHeaders=e},getFiles:function(e){return e?i.filterFiles(e):i.files},allowedExtensions:function(t){e.isArray(t)||i.throwException("Extensions must be an array"),i.extensions=t}},r(function(){t.$broadcast("$dropletReady")})}()}],link:function(e,t){var n=function(e){e.preventDefault(),e.stopPropagation()};t.bind("dragover dragenter dragleave",n),t.bind("drop",function(t){n(t),e.traverseFiles(t.dataTransfer.files)})}}}]).directive("dropletPreview",["$window",function(e){return{scope:{model:"=ngModel"},restrict:"E",replace:!0,template:'<section class="droplet-preview"><div class="extension-{{model.extension}}" ng-show="!isImage(model.file)"><label>{{model.file.name}}</label></div><img ng-show="isImage(model.file)" ng-src="{{imageData}}" class="droplet-preview" /></section>',controller:["$scope",function(e){e.isImage=function(e){return!!e.type.match(/^image\//i)}}],link:function(t){t.imageData="";var n=new e.FileReader;n.onload=function(e){t.$apply(function(){t.imageData=e.target.result})},t.isImage(t.model.file)&&n.readAsDataURL(t.model.file)}}}])}(window.angular);